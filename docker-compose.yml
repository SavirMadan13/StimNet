version: "3.9"

services:
  app:
    build: .
    container_name: distributed-node
    ports:
      - "8000:8000"
    environment:
      - NODE_ID=${NODE_ID:-distributed-node}
      - NODE_NAME=${NODE_NAME:-Distributed Node}
      - INSTITUTION_NAME=${INSTITUTION_NAME:-Default Institution}
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key}
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-distributed_framework}
      - REDIS_URL=redis://redis:6379/0
      - DATA_ROOT=/app/data
      - WORK_DIR=/app/work
    volumes:
      - ./data:/app/data
      - ./work:/app/work
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - distributed-network

  db:
    image: postgres:13
    container_name: distributed-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-distributed_framework}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - distributed-network

  redis:
    image: redis:6-alpine
    container_name: distributed-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - distributed-network

  nginx:
    image: nginx:alpine
    container_name: distributed-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - distributed-network

volumes:
  postgres_data:
  redis_data:

networks:
  distributed-network:
    driver: bridge
